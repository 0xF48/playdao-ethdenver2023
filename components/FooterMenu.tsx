import cn from "classnames"
import { Router, useRouter } from "next/router"
import { useState } from "react"
import Link from 'next/link'


function ScanIcon({ sel }: any) {
	let [color, setColor] = useState("white")
	if (sel) {
		color = 'black'
	}
	// return <svg onMouseEnter={() => { setColor('black') }} onMouseLeave={() => { setColor('white') }} xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth="1.5" stroke={color} className="w-6 h-6">
	// 	<path strokeLinecap="round" strokeLinejoin="round" d="M3.75 4.875c0-.621.504-1.125 1.125-1.125h4.5c.621 0 1.125.504 1.125 1.125v4.5c0 .621-.504 1.125-1.125 1.125h-4.5A1.125 1.125 0 013.75 9.375v-4.5zM3.75 14.625c0-.621.504-1.125 1.125-1.125h4.5c.621 0 1.125.504 1.125 1.125v4.5c0 .621-.504 1.125-1.125 1.125h-4.5a1.125 1.125 0 01-1.125-1.125v-4.5zM13.5 4.875c0-.621.504-1.125 1.125-1.125h4.5c.621 0 1.125.504 1.125 1.125v4.5c0 .621-.504 1.125-1.125 1.125h-4.5A1.125 1.125 0 0113.5 9.375v-4.5z" />
	// 	<path strokeLinecap="round" strokeLinejoin="round" d="M6.75 6.75h.75v.75h-.75v-.75zM6.75 16.5h.75v.75h-.75v-.75zM16.5 6.75h.75v.75h-.75v-.75zM13.5 13.5h.75v.75h-.75v-.75zM13.5 19.5h.75v.75h-.75v-.75zM19.5 13.5h.75v.75h-.75v-.75zM19.5 19.5h.75v.75h-.75v-.75zM16.5 16.5h.75v.75h-.75v-.75z" />
	// </svg>

	return <svg className="w-6 h-6" onMouseEnter={() => { setColor('black') }} onMouseLeave={() => { setColor('white') }} viewBox="0 0 69 68" fill={color} xmlns="http://www.w3.org/2000/svg">
		<path d="M21.5231 8.93737V21.5278C21.5231 21.5278 13.1295 25.7246 8.93269 21.5278C4.73588 17.331 8.93269 8.93737 8.93269 8.93737H21.5231ZM25.72 0.543741C17.5246 3.74087 12.9313 3.934 4.73588 0.543741C3.62281 0.543741 2.55534 0.985903 1.76828 1.77296C0.981225 2.56001 0.539063 3.62749 0.539062 4.74056C3.41688 12.7618 3.26698 17.3632 0.539062 25.7246C0.539063 26.8377 0.981225 27.9052 1.76828 28.6922C2.55534 29.4793 3.45716 29.9215 6.19493 29.9215C8.9327 29.9215 7.57201 26.5115 15.1459 29.2657C22.7199 32.0199 27.9005 29.4793 28.6876 28.6922C29.4746 27.9052 29.9168 26.8377 29.9168 25.7246C28.0322 17.3637 27.9262 12.7619 29.9168 4.74056C29.9168 3.62749 29.4746 2.56001 28.6876 1.77296C28.3464 0.624606 27.2436 0.211652 25.72 0.543741ZM21.5231 46.7087C25.72 50.9055 21.5231 59.2992 21.5231 59.2992H8.93269V46.7087C8.93269 46.7087 17.3263 42.5119 21.5231 46.7087ZM25.72 38.3151C17.5254 40.9172 12.9306 40.2911 4.73588 38.3151C3.62281 38.3151 2.55534 38.7572 1.76828 39.5443C0.981225 40.3314 0.539063 41.3988 0.539062 42.5119C1.78325 50.551 2.06419 55.1106 0.539062 63.496C0.539063 64.609 0.981225 65.6765 1.76828 66.4636C2.55534 67.2506 3.62281 67.6928 4.73588 67.6928C12.9307 65.9182 17.5252 65.7566 25.72 67.6928C26.833 67.6928 27.9005 67.2506 28.6876 66.4636C29.4746 65.6765 29.9168 64.609 29.9168 63.496C28.2483 55.3015 28.5176 50.7064 29.9168 42.5119C29.9168 41.3988 29.4746 40.3314 28.6876 39.5443C27.9005 38.7572 26.833 38.3151 25.72 38.3151ZM59.2945 8.93737C63.9831 13.626 59.2945 21.5278 59.2945 21.5278H46.704V8.93737C46.704 8.93737 54.6059 4.24874 59.2945 8.93737ZM63.4913 0.543741C55.4843 3.19786 50.8818 3.11646 42.5072 0.543741C41.3942 0.543741 40.3267 0.985903 39.5396 1.77296C38.7526 2.56001 38.3104 3.62749 38.3104 4.74056C41.557 12.9357 42.0945 17.5296 38.3104 25.7246C38.3104 26.8377 38.7526 27.9052 39.5396 28.6922C40.3267 29.4793 41.3942 29.9215 42.5072 29.9215C42.5072 29.9215 43.8351 28.069 52.9993 29.9215C62.1634 31.774 63.4913 29.9215 63.4913 29.9215C62.3403 26.592 63.7047 25.2159 64.9176 24.0031C66.1304 22.7903 70.1957 20.1715 67.1307 17.3638C64.0657 14.5561 67.088 8.31029 67.6717 6.59288C68.2555 4.87547 67.2459 2.56001 66.4589 1.77296C65.6718 0.985903 64.6044 0.543741 63.4913 0.543741Z" fill={color} />
		<path d="M63.4913 67.6925C60.6934 67.6925 59.2944 66.2936 59.2944 63.4957V55.1021C59.2944 52.3042 60.6934 50.9053 63.4913 50.9053C66.2891 50.9053 67.6881 52.3042 67.6881 55.1021V63.4957C67.6881 66.2936 66.2891 67.6925 63.4913 67.6925Z" fill={color} />
		<path d="M42.5074 55.1017C39.7095 55.1017 38.3105 53.7028 38.3105 50.9049V42.5113C38.3105 39.7134 39.7095 38.3145 42.5074 38.3145C45.3052 38.3145 46.7042 39.7134 46.7042 42.5113V50.9049C46.7042 53.7028 45.3052 55.1017 42.5074 55.1017Z" fill={color} />
		<path d="M52.9991 50.9053C55.7969 50.9053 57.1959 52.3042 57.1959 55.1021V63.4957C57.1959 66.2936 55.7969 67.6925 52.9991 67.6925C50.2012 67.6925 48.8022 66.2936 48.8022 63.4957V55.1021C48.8022 52.3042 50.2012 50.9053 52.9991 50.9053Z" fill={color} />
		<path d="M42.5074 67.6925C39.7095 67.6925 38.3105 66.2935 38.3105 63.4956C38.3105 60.6978 39.7095 59.2988 42.5074 59.2988C45.3052 59.2988 46.7042 60.6978 46.7042 63.4956C46.7042 66.2935 45.3052 67.6925 42.5074 67.6925Z" fill={color} />
		<path d="M52.9991 38.3145C55.7969 38.3145 57.1959 39.7134 57.1959 42.5113C57.1959 45.3091 55.7969 46.7081 52.9991 46.7081C50.2012 46.7081 48.8022 45.3091 48.8022 42.5113C48.8022 39.7134 50.2012 38.3145 52.9991 38.3145Z" fill={color} />
		<path d="M63.4913 46.7081C60.6934 46.7081 59.2944 45.3091 59.2944 42.5113C59.2944 39.7134 60.6934 38.3145 63.4913 38.3145C66.2891 38.3145 67.6881 39.7134 67.6881 42.5113C67.6881 45.3091 66.2891 46.7081 63.4913 46.7081Z" fill={color} />
	</svg>




}

function MenuIcon({ sel }: any) {
	let [color, setColor] = useState("white")
	if (sel) {
		color = 'black'
	}
	return <svg onMouseEnter={() => { setColor('black') }} onMouseLeave={() => { setColor('white') }} xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 78 70" strokeWidth="1.5" stroke={color} className="w-6 h-6">
		<path d="M8.08531 15.6857C10.1456 15.6857 12.1215 14.8703 13.5783 13.4189C15.0352 11.9675 12.7542 7.94646 15.8536 7.94646C18.953 7.94646 17.413 2.47401 13.5783 2.47401C9.74363 2.47401 10.1456 0.207246 8.08531 0.207246C6.02503 0.207246 4.04913 1.02263 2.5923 2.47401C1.13546 3.92539 0.317014 5.89389 0.317014 7.94646C0.317014 9.99903 -0.561374 13.4189 2.5923 13.4189C5.74597 13.4189 6.02503 15.6857 8.08531 15.6857ZM41.9717 2.47401C36.1562 -3.3304 26.421 2.75358 25.3284 3.84212C24.2357 4.93066 23.6219 6.40704 23.6219 7.94646C23.6219 9.48589 22.8224 12.0508 25.3284 12.0508C27.8343 12.0508 27.9029 13.7509 29.4481 13.7509C29.4481 13.7509 60.8015 7.93892 64.9212 12.0508C69.041 16.1627 75.2009 13.1393 76.2935 12.0508C77.3862 10.9623 78 9.48589 78 7.94646C78 6.40704 77.3862 4.93066 76.2935 3.84212C75.2009 2.75358 73.719 2.14205 72.1738 2.14205C72.1738 2.14205 47.7872 8.27843 41.9717 2.47401ZM23.6219 35.0337C23.6219 33.4943 24.2357 32.0179 25.3284 30.9294C26.421 29.8408 27.6714 26.2737 46.8577 32.0781C66.044 37.8826 65.0718 29.5613 69.5605 29.5613C74.0492 29.5613 75.2009 29.8408 76.2935 30.9294C77.3862 32.0179 78 33.4943 78 35.0337C78 36.5731 77.3862 38.0495 76.2935 39.1381C75.2009 40.2266 74.6933 40.8381 72.1738 40.8381C69.6542 40.8381 66.698 35.0337 50.811 40.8381C34.924 46.6426 37.1432 43.9497 34.0257 40.8381C30.9082 37.7266 26.421 40.2266 25.3284 39.1381C24.2357 38.0495 23.6219 36.5731 23.6219 35.0337ZM23.6219 62.121C23.6219 60.5815 21.2086 58.0166 25.3284 58.0166C29.4481 58.0166 34.1121 54.2326 38.9118 59.0231C43.7114 63.8136 72.1738 56.3166 72.1738 56.3166C73.719 56.3166 75.2009 56.9281 76.2935 58.0166C77.3862 59.1052 78 60.5815 78 62.121C78 63.6604 77.3862 65.1368 76.2935 66.2253C75.2009 67.3139 73.719 67.9254 72.1738 67.9254H29.4481C27.9029 67.9254 26.421 67.3139 25.3284 66.2253C24.2357 65.1368 23.6219 63.6604 23.6219 62.121ZM15.8536 35.0337C15.8536 37.0863 15.0352 39.0548 13.5783 40.5062C12.1215 41.9576 10.1456 42.7729 8.08531 42.7729C6.02503 42.7729 4.04913 41.9576 2.5923 40.5062C1.13546 39.0548 0.317014 37.0863 0.317014 35.0337C0.317014 32.9812 -0.75879 29.5613 2.5923 29.5613C5.94338 29.5613 6.02503 27.2945 8.08531 27.2945C10.1456 27.2945 13.5783 26.6996 13.5783 29.5613C13.5783 32.423 15.8536 32.9812 15.8536 35.0337ZM8.08531 69.8602C10.1456 69.8602 13.5783 70.8437 13.5783 67.5934C13.5783 64.3431 15.8536 64.1735 15.8536 62.121C15.8536 60.0684 15.0352 58.0999 13.5783 56.6485C12.1215 55.1971 10.1456 54.3818 8.08531 54.3818C6.02503 54.3818 6.43689 56.6485 2.5923 56.6485C-1.2523 56.6485 0.317014 60.0684 0.317014 62.121C0.317014 64.1735 0.080226 67.5934 2.5923 67.5934C5.10437 67.5934 6.02503 69.8602 8.08531 69.8602Z" fill={color} />
	</svg>

}

function BadgeIcon({ sel }: any) {
	let [color, setColor] = useState("white")
	if (sel) {
		color = 'black'
	}
	return <svg onMouseEnter={() => { setColor('black') }} onMouseLeave={() => { setColor('white') }} viewBox="0 0 64 67" width="22" height="27" fill="none" xmlns="http://www.w3.org/2000/svg">
		<path d="M61.3618 37.5427C59.1716 33.6096 61.0559 29.9908 63.2307 26.5353C63.5654 26.052 63.7842 25.4975 63.8701 24.9153C63.9559 24.333 63.9064 23.7387 63.7254 23.1788C63.5445 22.619 63.237 22.1086 62.8269 21.6877C61.6505 20.4802 59.6276 20.0613 58.1133 19.4576C53.9153 17.5177 53.4312 13.5103 53.1738 9.45498C53.1195 7.01379 50.6469 5.1712 48.2788 5.88262C45.7841 6.53786 43.4061 7.34371 40.8377 6.50721C39.5058 6.07343 38.3066 5.30503 37.3541 4.27506C35.4172 1.92324 32.0248 -2.30728 29.0772 1.57346L26.8522 4.27506C23.4948 7.93824 18.1122 5.04591 13.974 5.75427C13.3966 5.85311 12.8497 6.08441 12.376 6.43014C11.9022 6.77587 11.5144 7.2267 11.2428 7.7475C10.4621 9.24447 10.6911 11.3054 10.5875 12.938C9.9983 17.8422 7.31209 18.8384 2.68881 20.7526C0.986907 21.3496 -0.081759 23.1358 0.180495 24.9153C0.554716 27.4544 -1.49677 29.5049 2.68881 29.5049C7.7224 29.5049 2.61852 37.6544 0.819819 40.5122C0.146982 41.4839 -0.0386155 42.7432 0.325142 43.8687C1.95207 48.9026 9.77412 47.1886 10.5653 54.0872C10.6689 55.7199 10.4398 57.7808 11.2206 59.2777C12.0506 60.8693 13.9581 61.6831 15.6827 61.165C18.198 60.5546 20.6486 59.7408 23.2218 60.5689C26.766 61.7095 28.2613 67 31.9697 67C32.5553 67 33.1331 66.8643 33.658 66.6035C36.8317 65.0266 33.8886 64.6797 38.1914 60.5689C42.4941 56.458 45.755 62.0592 50.0988 61.3156C50.6762 61.2168 51.2231 60.9855 51.6968 60.6398C52.1706 60.294 52.5584 59.8432 52.83 59.3224C53.1016 58.8016 53.2497 58.2249 53.2628 57.6372C53.5218 53.5573 54.1231 49.5197 58.2023 47.6346L61.4507 46.3396C62.0044 46.1454 62.5059 45.8254 62.9159 45.4045C63.326 44.9836 63.6335 44.4733 63.8144 43.9134C63.9954 43.3535 64.0449 42.7592 63.9591 42.177C63.8733 41.5947 63.6544 41.0402 63.3197 40.5569L61.3618 37.5427ZM45.1404 26.5353C40.7784 26.5353 41.3256 28.0803 41.3256 33.8789C41.3256 39.6775 37.8696 37.9508 33.658 42.177C29.4463 46.4031 33.5233 44.4582 33.658 47.6346C33.7926 50.811 32.3204 51.3061 30.7736 51.6659C29.2268 52.0257 27.6009 51.7563 26.2514 50.9167C25.6239 50.5213 25.0735 50.0144 24.6272 49.4208C24.6272 49.4208 26.307 41.5449 22.2263 41.5449C18.1455 41.5449 19.4216 38.3849 16.2516 36.8274C13.0815 35.2699 13.7334 34.1217 13.7334 33.5349C13.7334 32.35 14.2025 31.2135 15.0375 30.3756C15.8725 29.5377 17.005 29.067 18.1859 29.067C19.3667 29.067 20.4992 29.5377 21.3342 30.3756C21.3342 30.3756 22.302 35.1074 28.3968 35.1074C34.4917 35.1074 42.2046 19.6809 42.2046 19.6809C42.9098 18.7216 43.9658 18.0827 45.1404 17.9047C46.315 17.7268 47.512 18.0243 48.4679 18.732C49.4239 19.4396 50.0606 20.4993 50.2379 21.678C50.4153 22.8567 49.5025 26.5353 45.1404 26.5353Z" fill={color} />
	</svg>

}


export default function FooterMenu() {

	let router = useRouter()
	// console.log(router.pathname)

	return <div className="w-full p-4 flex items-center content-center justify-center fixed bottom-0 left-0 pointer-events-none">
		<div className='gradient-bg transition-transform transform-gpu pointer-events-auto scale-1 cursor-pointer border-4	 border-black w-auto h-16 bg-black rounded-2xl text-white flex flex-row relative px-0'>
			<Link href="/"><div className="h-full px-6 flex items-center content-center justify-center hover:color-red-500">
				<ScanIcon sel={router.pathname == '/'}></ScanIcon>
			</div></Link>
			<Link href="/quests"><div className="h-full px-6 flex items-center content-center justify-center hover:color-red-500">
				<MenuIcon sel={router.pathname == '/quests'}></MenuIcon>
			</div></Link>
			<Link href="/badges"><div className="h-full px-6 flex items-center content-center justify-center">
				<BadgeIcon sel={router.pathname == '/badges'} ></BadgeIcon>
			</div>
			</Link>
			<div className={"transition-all transform-gpu ease absolute h-4 -bottom-2 rounded-full bg-black " + cn({
				"left-1/2 w-2 -translate-x-1/2": router.pathname != '/' && router.pathname != '/quests' && router.pathname != '/badges',
				"animate-position": true,
				"left-5 w-8": router.pathname == '/',
				"left-1/2 -translate-x-1/2 w-8": router.pathname == '/quests',
				'right-5 w-8': router.pathname == '/badges'
			})} />
		</div>
	</div>
}