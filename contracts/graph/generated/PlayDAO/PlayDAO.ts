// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class BadgeGranted extends ethereum.Event {
  get params(): BadgeGranted__Params {
    return new BadgeGranted__Params(this);
  }
}

export class BadgeGranted__Params {
  _event: BadgeGranted;

  constructor(event: BadgeGranted) {
    this._event = event;
  }

  get daoID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get from(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get badgeID(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get attestationCreator(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get attestationKey(): Bytes {
    return this._event.parameters[5].value.toBytes();
  }
}

export class BadgeTypeCreated extends ethereum.Event {
  get params(): BadgeTypeCreated__Params {
    return new BadgeTypeCreated__Params(this);
  }
}

export class BadgeTypeCreated__Params {
  _event: BadgeTypeCreated;

  constructor(event: BadgeTypeCreated) {
    this._event = event;
  }

  get daoID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get badgeTypeID(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get name(): string {
    return this._event.parameters[2].value.toString();
  }

  get metadataURI(): string {
    return this._event.parameters[3].value.toString();
  }
}

export class DAOCreated extends ethereum.Event {
  get params(): DAOCreated__Params {
    return new DAOCreated__Params(this);
  }
}

export class DAOCreated__Params {
  _event: DAOCreated;

  constructor(event: DAOCreated) {
    this._event = event;
  }

  get daoID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get name(): string {
    return this._event.parameters[1].value.toString();
  }

  get metadataURI(): string {
    return this._event.parameters[2].value.toString();
  }

  get badgeContract(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get owner(): Address {
    return this._event.parameters[4].value.toAddress();
  }
}

export class Deposited extends ethereum.Event {
  get params(): Deposited__Params {
    return new Deposited__Params(this);
  }
}

export class Deposited__Params {
  _event: Deposited;

  constructor(event: Deposited) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get total(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class QuestCanceled extends ethereum.Event {
  get params(): QuestCanceled__Params {
    return new QuestCanceled__Params(this);
  }
}

export class QuestCanceled__Params {
  _event: QuestCanceled;

  constructor(event: QuestCanceled) {
    this._event = event;
  }

  get daoID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get questID(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get claimID(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get operator(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class QuestClaimed extends ethereum.Event {
  get params(): QuestClaimed__Params {
    return new QuestClaimed__Params(this);
  }
}

export class QuestClaimed__Params {
  _event: QuestClaimed;

  constructor(event: QuestClaimed) {
    this._event = event;
  }

  get daoID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get questTypeID(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get questID(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get claimID(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get claimer(): Address {
    return this._event.parameters[4].value.toAddress();
  }
}

export class QuestCompleted extends ethereum.Event {
  get params(): QuestCompleted__Params {
    return new QuestCompleted__Params(this);
  }
}

export class QuestCompleted__Params {
  _event: QuestCompleted;

  constructor(event: QuestCompleted) {
    this._event = event;
  }

  get daoID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get questID(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get claimID(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get verifier(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get proofMetadataURI(): string {
    return this._event.parameters[4].value.toString();
  }

  get score(): string {
    return this._event.parameters[5].value.toString();
  }

  get attestationCreator(): Address {
    return this._event.parameters[6].value.toAddress();
  }

  get contributorAttestationKey(): Bytes {
    return this._event.parameters[7].value.toBytes();
  }

  get verifierAttestationKey(): Bytes {
    return this._event.parameters[8].value.toBytes();
  }
}

export class QuestStarted extends ethereum.Event {
  get params(): QuestStarted__Params {
    return new QuestStarted__Params(this);
  }
}

export class QuestStarted__Params {
  _event: QuestStarted;

  constructor(event: QuestStarted) {
    this._event = event;
  }

  get daoID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get questTypeID(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get questID(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get name(): string {
    return this._event.parameters[3].value.toString();
  }

  get metadataURI(): string {
    return this._event.parameters[4].value.toString();
  }

  get numContributions(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get requiredStake(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class QuestTypeCreated extends ethereum.Event {
  get params(): QuestTypeCreated__Params {
    return new QuestTypeCreated__Params(this);
  }
}

export class QuestTypeCreated__Params {
  _event: QuestTypeCreated;

  constructor(event: QuestTypeCreated) {
    this._event = event;
  }

  get daoID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get questTypeID(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get name(): string {
    return this._event.parameters[2].value.toString();
  }

  get metadataURI(): string {
    return this._event.parameters[3].value.toString();
  }

  get contributorBadgeTypeID(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get verifierBadgeTypeID(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get starterDeps(): Array<BigInt> {
    return this._event.parameters[6].value.toBigIntArray();
  }

  get contributorDeps(): Array<BigInt> {
    return this._event.parameters[7].value.toBigIntArray();
  }

  get verifierDeps(): Array<BigInt> {
    return this._event.parameters[8].value.toBigIntArray();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Withdrew extends ethereum.Event {
  get params(): Withdrew__Params {
    return new Withdrew__Params(this);
  }
}

export class Withdrew__Params {
  _event: Withdrew;

  constructor(event: Withdrew) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get remaining(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class WithdrewFromDAO extends ethereum.Event {
  get params(): WithdrewFromDAO__Params {
    return new WithdrewFromDAO__Params(this);
  }
}

export class WithdrewFromDAO__Params {
  _event: WithdrewFromDAO;

  constructor(event: WithdrewFromDAO) {
    this._event = event;
  }

  get daoID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get remaining(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class PlayDAO___DAOsResult {
  value0: string;
  value1: string;
  value2: Address;
  value3: Address;
  value4: BigInt;
  value5: BigInt;

  constructor(
    value0: string,
    value1: string,
    value2: Address,
    value3: Address,
    value4: BigInt,
    value5: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set("value3", ethereum.Value.fromAddress(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    return map;
  }

  getName(): string {
    return this.value0;
  }

  getMetadataURI(): string {
    return this.value1;
  }

  getBadgeContract(): Address {
    return this.value2;
  }

  getOwner(): Address {
    return this.value3;
  }

  getTotalStaked(): BigInt {
    return this.value4;
  }

  getBalance(): BigInt {
    return this.value5;
  }
}

export class PlayDAO___questTypesResult {
  value0: string;
  value1: string;
  value2: BigInt;
  value3: BigInt;

  constructor(value0: string, value1: string, value2: BigInt, value3: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    return map;
  }

  getName(): string {
    return this.value0;
  }

  getMetadataURI(): string {
    return this.value1;
  }

  getContributorBadgeTypeID(): BigInt {
    return this.value2;
  }

  getVerifierBadgeTypeID(): BigInt {
    return this.value3;
  }
}

export class PlayDAO___questsResult {
  value0: BigInt;
  value1: string;
  value2: string;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;
  value6: BigInt;
  value7: BigInt;

  constructor(
    value0: BigInt,
    value1: string,
    value2: string,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt,
    value6: BigInt,
    value7: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromUnsignedBigInt(this.value7));
    return map;
  }

  getQuestTypeID(): BigInt {
    return this.value0;
  }

  getName(): string {
    return this.value1;
  }

  getMetadataURI(): string {
    return this.value2;
  }

  getLimitContributors(): BigInt {
    return this.value3;
  }

  getNumOngoings(): BigInt {
    return this.value4;
  }

  getNumComplted(): BigInt {
    return this.value5;
  }

  getNumCanceled(): BigInt {
    return this.value6;
  }

  getRequiredStake(): BigInt {
    return this.value7;
  }
}

export class PlayDAO extends ethereum.SmartContract {
  static bind(address: Address): PlayDAO {
    return new PlayDAO("PlayDAO", address);
  }

  ERR_BADGE_TYPE_NOT_FOUND(): string {
    let result = super.call(
      "ERR_BADGE_TYPE_NOT_FOUND",
      "ERR_BADGE_TYPE_NOT_FOUND():(string)",
      []
    );

    return result[0].toString();
  }

  try_ERR_BADGE_TYPE_NOT_FOUND(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "ERR_BADGE_TYPE_NOT_FOUND",
      "ERR_BADGE_TYPE_NOT_FOUND():(string)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  ERR_CANCEL_CLAIM_NOT_ALLOWED(): string {
    let result = super.call(
      "ERR_CANCEL_CLAIM_NOT_ALLOWED",
      "ERR_CANCEL_CLAIM_NOT_ALLOWED():(string)",
      []
    );

    return result[0].toString();
  }

  try_ERR_CANCEL_CLAIM_NOT_ALLOWED(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "ERR_CANCEL_CLAIM_NOT_ALLOWED",
      "ERR_CANCEL_CLAIM_NOT_ALLOWED():(string)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  ERR_CLAIM_NOT_ALLOWED(): string {
    let result = super.call(
      "ERR_CLAIM_NOT_ALLOWED",
      "ERR_CLAIM_NOT_ALLOWED():(string)",
      []
    );

    return result[0].toString();
  }

  try_ERR_CLAIM_NOT_ALLOWED(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "ERR_CLAIM_NOT_ALLOWED",
      "ERR_CLAIM_NOT_ALLOWED():(string)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  ERR_CLAIM_NOT_FOUND(): string {
    let result = super.call(
      "ERR_CLAIM_NOT_FOUND",
      "ERR_CLAIM_NOT_FOUND():(string)",
      []
    );

    return result[0].toString();
  }

  try_ERR_CLAIM_NOT_FOUND(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "ERR_CLAIM_NOT_FOUND",
      "ERR_CLAIM_NOT_FOUND():(string)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  ERR_DAO_NOT_FOUND(): string {
    let result = super.call(
      "ERR_DAO_NOT_FOUND",
      "ERR_DAO_NOT_FOUND():(string)",
      []
    );

    return result[0].toString();
  }

  try_ERR_DAO_NOT_FOUND(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "ERR_DAO_NOT_FOUND",
      "ERR_DAO_NOT_FOUND():(string)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  ERR_EMPTY_BADGE_TYPE_METADATA_URI(): string {
    let result = super.call(
      "ERR_EMPTY_BADGE_TYPE_METADATA_URI",
      "ERR_EMPTY_BADGE_TYPE_METADATA_URI():(string)",
      []
    );

    return result[0].toString();
  }

  try_ERR_EMPTY_BADGE_TYPE_METADATA_URI(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "ERR_EMPTY_BADGE_TYPE_METADATA_URI",
      "ERR_EMPTY_BADGE_TYPE_METADATA_URI():(string)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  ERR_EMPTY_BADGE_TYPE_NAME(): string {
    let result = super.call(
      "ERR_EMPTY_BADGE_TYPE_NAME",
      "ERR_EMPTY_BADGE_TYPE_NAME():(string)",
      []
    );

    return result[0].toString();
  }

  try_ERR_EMPTY_BADGE_TYPE_NAME(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "ERR_EMPTY_BADGE_TYPE_NAME",
      "ERR_EMPTY_BADGE_TYPE_NAME():(string)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  ERR_EMPTY_DAO_BADGE_CONTRACT(): string {
    let result = super.call(
      "ERR_EMPTY_DAO_BADGE_CONTRACT",
      "ERR_EMPTY_DAO_BADGE_CONTRACT():(string)",
      []
    );

    return result[0].toString();
  }

  try_ERR_EMPTY_DAO_BADGE_CONTRACT(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "ERR_EMPTY_DAO_BADGE_CONTRACT",
      "ERR_EMPTY_DAO_BADGE_CONTRACT():(string)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  ERR_EMPTY_DAO_METADATA_URI(): string {
    let result = super.call(
      "ERR_EMPTY_DAO_METADATA_URI",
      "ERR_EMPTY_DAO_METADATA_URI():(string)",
      []
    );

    return result[0].toString();
  }

  try_ERR_EMPTY_DAO_METADATA_URI(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "ERR_EMPTY_DAO_METADATA_URI",
      "ERR_EMPTY_DAO_METADATA_URI():(string)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  ERR_EMPTY_DAO_NAME(): string {
    let result = super.call(
      "ERR_EMPTY_DAO_NAME",
      "ERR_EMPTY_DAO_NAME():(string)",
      []
    );

    return result[0].toString();
  }

  try_ERR_EMPTY_DAO_NAME(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "ERR_EMPTY_DAO_NAME",
      "ERR_EMPTY_DAO_NAME():(string)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  ERR_EMPTY_DAO_OWNER(): string {
    let result = super.call(
      "ERR_EMPTY_DAO_OWNER",
      "ERR_EMPTY_DAO_OWNER():(string)",
      []
    );

    return result[0].toString();
  }

  try_ERR_EMPTY_DAO_OWNER(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "ERR_EMPTY_DAO_OWNER",
      "ERR_EMPTY_DAO_OWNER():(string)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  ERR_EMPTY_QUEST_METADATA_URI(): string {
    let result = super.call(
      "ERR_EMPTY_QUEST_METADATA_URI",
      "ERR_EMPTY_QUEST_METADATA_URI():(string)",
      []
    );

    return result[0].toString();
  }

  try_ERR_EMPTY_QUEST_METADATA_URI(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "ERR_EMPTY_QUEST_METADATA_URI",
      "ERR_EMPTY_QUEST_METADATA_URI():(string)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  ERR_EMPTY_QUEST_NAME(): string {
    let result = super.call(
      "ERR_EMPTY_QUEST_NAME",
      "ERR_EMPTY_QUEST_NAME():(string)",
      []
    );

    return result[0].toString();
  }

  try_ERR_EMPTY_QUEST_NAME(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "ERR_EMPTY_QUEST_NAME",
      "ERR_EMPTY_QUEST_NAME():(string)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  ERR_EMPTY_QUEST_TYPE_METADATA_URI(): string {
    let result = super.call(
      "ERR_EMPTY_QUEST_TYPE_METADATA_URI",
      "ERR_EMPTY_QUEST_TYPE_METADATA_URI():(string)",
      []
    );

    return result[0].toString();
  }

  try_ERR_EMPTY_QUEST_TYPE_METADATA_URI(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "ERR_EMPTY_QUEST_TYPE_METADATA_URI",
      "ERR_EMPTY_QUEST_TYPE_METADATA_URI():(string)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  ERR_EMPTY_QUEST_TYPE_NAME(): string {
    let result = super.call(
      "ERR_EMPTY_QUEST_TYPE_NAME",
      "ERR_EMPTY_QUEST_TYPE_NAME():(string)",
      []
    );

    return result[0].toString();
  }

  try_ERR_EMPTY_QUEST_TYPE_NAME(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "ERR_EMPTY_QUEST_TYPE_NAME",
      "ERR_EMPTY_QUEST_TYPE_NAME():(string)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  ERR_INSUFFICIENT_STAKE(): string {
    let result = super.call(
      "ERR_INSUFFICIENT_STAKE",
      "ERR_INSUFFICIENT_STAKE():(string)",
      []
    );

    return result[0].toString();
  }

  try_ERR_INSUFFICIENT_STAKE(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "ERR_INSUFFICIENT_STAKE",
      "ERR_INSUFFICIENT_STAKE():(string)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  ERR_NOT_DAO_OWNER(): string {
    let result = super.call(
      "ERR_NOT_DAO_OWNER",
      "ERR_NOT_DAO_OWNER():(string)",
      []
    );

    return result[0].toString();
  }

  try_ERR_NOT_DAO_OWNER(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "ERR_NOT_DAO_OWNER",
      "ERR_NOT_DAO_OWNER():(string)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  ERR_NO_MORE_CLAIM(): string {
    let result = super.call(
      "ERR_NO_MORE_CLAIM",
      "ERR_NO_MORE_CLAIM():(string)",
      []
    );

    return result[0].toString();
  }

  try_ERR_NO_MORE_CLAIM(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "ERR_NO_MORE_CLAIM",
      "ERR_NO_MORE_CLAIM():(string)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  ERR_QUEST_CLAIMED_ALREADY(): string {
    let result = super.call(
      "ERR_QUEST_CLAIMED_ALREADY",
      "ERR_QUEST_CLAIMED_ALREADY():(string)",
      []
    );

    return result[0].toString();
  }

  try_ERR_QUEST_CLAIMED_ALREADY(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "ERR_QUEST_CLAIMED_ALREADY",
      "ERR_QUEST_CLAIMED_ALREADY():(string)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  ERR_QUEST_NOT_FOUND(): string {
    let result = super.call(
      "ERR_QUEST_NOT_FOUND",
      "ERR_QUEST_NOT_FOUND():(string)",
      []
    );

    return result[0].toString();
  }

  try_ERR_QUEST_NOT_FOUND(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "ERR_QUEST_NOT_FOUND",
      "ERR_QUEST_NOT_FOUND():(string)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  ERR_QUEST_NOT_ONGOING(): string {
    let result = super.call(
      "ERR_QUEST_NOT_ONGOING",
      "ERR_QUEST_NOT_ONGOING():(string)",
      []
    );

    return result[0].toString();
  }

  try_ERR_QUEST_NOT_ONGOING(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "ERR_QUEST_NOT_ONGOING",
      "ERR_QUEST_NOT_ONGOING():(string)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  ERR_QUEST_TYPE_NOT_FOUND(): string {
    let result = super.call(
      "ERR_QUEST_TYPE_NOT_FOUND",
      "ERR_QUEST_TYPE_NOT_FOUND():(string)",
      []
    );

    return result[0].toString();
  }

  try_ERR_QUEST_TYPE_NOT_FOUND(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "ERR_QUEST_TYPE_NOT_FOUND",
      "ERR_QUEST_TYPE_NOT_FOUND():(string)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  ERR_SELF_VERIFICATION(): string {
    let result = super.call(
      "ERR_SELF_VERIFICATION",
      "ERR_SELF_VERIFICATION():(string)",
      []
    );

    return result[0].toString();
  }

  try_ERR_SELF_VERIFICATION(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "ERR_SELF_VERIFICATION",
      "ERR_SELF_VERIFICATION():(string)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  ERR_START_QUEST_NOT_ALLOWED(): string {
    let result = super.call(
      "ERR_START_QUEST_NOT_ALLOWED",
      "ERR_START_QUEST_NOT_ALLOWED():(string)",
      []
    );

    return result[0].toString();
  }

  try_ERR_START_QUEST_NOT_ALLOWED(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "ERR_START_QUEST_NOT_ALLOWED",
      "ERR_START_QUEST_NOT_ALLOWED():(string)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  ERR_VERIFY_CLAIM_NOT_ALLOWED(): string {
    let result = super.call(
      "ERR_VERIFY_CLAIM_NOT_ALLOWED",
      "ERR_VERIFY_CLAIM_NOT_ALLOWED():(string)",
      []
    );

    return result[0].toString();
  }

  try_ERR_VERIFY_CLAIM_NOT_ALLOWED(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "ERR_VERIFY_CLAIM_NOT_ALLOWED",
      "ERR_VERIFY_CLAIM_NOT_ALLOWED():(string)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  ERR_WRONG_BADGE_TYPE_ID(): string {
    let result = super.call(
      "ERR_WRONG_BADGE_TYPE_ID",
      "ERR_WRONG_BADGE_TYPE_ID():(string)",
      []
    );

    return result[0].toString();
  }

  try_ERR_WRONG_BADGE_TYPE_ID(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "ERR_WRONG_BADGE_TYPE_ID",
      "ERR_WRONG_BADGE_TYPE_ID():(string)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  ERR_ZERO_NUM_CONTRIBUTIONS(): string {
    let result = super.call(
      "ERR_ZERO_NUM_CONTRIBUTIONS",
      "ERR_ZERO_NUM_CONTRIBUTIONS():(string)",
      []
    );

    return result[0].toString();
  }

  try_ERR_ZERO_NUM_CONTRIBUTIONS(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "ERR_ZERO_NUM_CONTRIBUTIONS",
      "ERR_ZERO_NUM_CONTRIBUTIONS():(string)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  _DAOs(param0: BigInt): PlayDAO___DAOsResult {
    let result = super.call(
      "_DAOs",
      "_DAOs(uint256):(string,string,address,address,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new PlayDAO___DAOsResult(
      result[0].toString(),
      result[1].toString(),
      result[2].toAddress(),
      result[3].toAddress(),
      result[4].toBigInt(),
      result[5].toBigInt()
    );
  }

  try__DAOs(param0: BigInt): ethereum.CallResult<PlayDAO___DAOsResult> {
    let result = super.tryCall(
      "_DAOs",
      "_DAOs(uint256):(string,string,address,address,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PlayDAO___DAOsResult(
        value[0].toString(),
        value[1].toString(),
        value[2].toAddress(),
        value[3].toAddress(),
        value[4].toBigInt(),
        value[5].toBigInt()
      )
    );
  }

  _questTypes(param0: BigInt, param1: BigInt): PlayDAO___questTypesResult {
    let result = super.call(
      "_questTypes",
      "_questTypes(uint256,uint256):(string,string,uint256,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return new PlayDAO___questTypesResult(
      result[0].toString(),
      result[1].toString(),
      result[2].toBigInt(),
      result[3].toBigInt()
    );
  }

  try__questTypes(
    param0: BigInt,
    param1: BigInt
  ): ethereum.CallResult<PlayDAO___questTypesResult> {
    let result = super.tryCall(
      "_questTypes",
      "_questTypes(uint256,uint256):(string,string,uint256,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PlayDAO___questTypesResult(
        value[0].toString(),
        value[1].toString(),
        value[2].toBigInt(),
        value[3].toBigInt()
      )
    );
  }

  _quests(param0: BigInt, param1: BigInt): PlayDAO___questsResult {
    let result = super.call(
      "_quests",
      "_quests(uint256,uint256):(uint256,string,string,uint256,uint256,uint256,uint256,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return new PlayDAO___questsResult(
      result[0].toBigInt(),
      result[1].toString(),
      result[2].toString(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toBigInt(),
      result[7].toBigInt()
    );
  }

  try__quests(
    param0: BigInt,
    param1: BigInt
  ): ethereum.CallResult<PlayDAO___questsResult> {
    let result = super.tryCall(
      "_quests",
      "_quests(uint256,uint256):(uint256,string,string,uint256,uint256,uint256,uint256,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PlayDAO___questsResult(
        value[0].toBigInt(),
        value[1].toString(),
        value[2].toString(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toBigInt(),
        value[7].toBigInt()
      )
    );
  }

  balanceOf(daoID: BigInt): BigInt {
    let result = super.call("balanceOf", "balanceOf(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(daoID)
    ]);

    return result[0].toBigInt();
  }

  try_balanceOf(daoID: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balanceOf", "balanceOf(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(daoID)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  depositedOf(account: Address): BigInt {
    let result = super.call("depositedOf", "depositedOf(address):(uint256)", [
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBigInt();
  }

  try_depositedOf(account: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "depositedOf",
      "depositedOf(address):(uint256)",
      [ethereum.Value.fromAddress(account)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  totalClaims(daoID: BigInt, questID: BigInt): BigInt {
    let result = super.call(
      "totalClaims",
      "totalClaims(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(daoID),
        ethereum.Value.fromUnsignedBigInt(questID)
      ]
    );

    return result[0].toBigInt();
  }

  try_totalClaims(daoID: BigInt, questID: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalClaims",
      "totalClaims(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(daoID),
        ethereum.Value.fromUnsignedBigInt(questID)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalDAOs(): BigInt {
    let result = super.call("totalDAOs", "totalDAOs():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalDAOs(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalDAOs", "totalDAOs():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalQuestTypes(daoID: BigInt): BigInt {
    let result = super.call(
      "totalQuestTypes",
      "totalQuestTypes(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(daoID)]
    );

    return result[0].toBigInt();
  }

  try_totalQuestTypes(daoID: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalQuestTypes",
      "totalQuestTypes(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(daoID)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalQuests(daoID: BigInt): BigInt {
    let result = super.call("totalQuests", "totalQuests(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(daoID)
    ]);

    return result[0].toBigInt();
  }

  try_totalQuests(daoID: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalQuests",
      "totalQuests(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(daoID)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalStaked(daoID: BigInt): BigInt {
    let result = super.call("totalStaked", "totalStaked(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(daoID)
    ]);

    return result[0].toBigInt();
  }

  try_totalStaked(daoID: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalStaked",
      "totalStaked(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(daoID)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get attestationPublisher(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CancelClaimCall extends ethereum.Call {
  get inputs(): CancelClaimCall__Inputs {
    return new CancelClaimCall__Inputs(this);
  }

  get outputs(): CancelClaimCall__Outputs {
    return new CancelClaimCall__Outputs(this);
  }
}

export class CancelClaimCall__Inputs {
  _call: CancelClaimCall;

  constructor(call: CancelClaimCall) {
    this._call = call;
  }

  get daoID(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get questID(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get claimID(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class CancelClaimCall__Outputs {
  _call: CancelClaimCall;

  constructor(call: CancelClaimCall) {
    this._call = call;
  }
}

export class ClaimQuestCall extends ethereum.Call {
  get inputs(): ClaimQuestCall__Inputs {
    return new ClaimQuestCall__Inputs(this);
  }

  get outputs(): ClaimQuestCall__Outputs {
    return new ClaimQuestCall__Outputs(this);
  }
}

export class ClaimQuestCall__Inputs {
  _call: ClaimQuestCall;

  constructor(call: ClaimQuestCall) {
    this._call = call;
  }

  get daoID(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get questID(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ClaimQuestCall__Outputs {
  _call: ClaimQuestCall;

  constructor(call: ClaimQuestCall) {
    this._call = call;
  }
}

export class CompleteQuestCall extends ethereum.Call {
  get inputs(): CompleteQuestCall__Inputs {
    return new CompleteQuestCall__Inputs(this);
  }

  get outputs(): CompleteQuestCall__Outputs {
    return new CompleteQuestCall__Outputs(this);
  }
}

export class CompleteQuestCall__Inputs {
  _call: CompleteQuestCall;

  constructor(call: CompleteQuestCall) {
    this._call = call;
  }

  get daoID(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get questID(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get claimID(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get proofMetadataURI(): string {
    return this._call.inputValues[3].value.toString();
  }

  get score(): string {
    return this._call.inputValues[4].value.toString();
  }
}

export class CompleteQuestCall__Outputs {
  _call: CompleteQuestCall;

  constructor(call: CompleteQuestCall) {
    this._call = call;
  }
}

export class CreateBadgeTypeCall extends ethereum.Call {
  get inputs(): CreateBadgeTypeCall__Inputs {
    return new CreateBadgeTypeCall__Inputs(this);
  }

  get outputs(): CreateBadgeTypeCall__Outputs {
    return new CreateBadgeTypeCall__Outputs(this);
  }
}

export class CreateBadgeTypeCall__Inputs {
  _call: CreateBadgeTypeCall;

  constructor(call: CreateBadgeTypeCall) {
    this._call = call;
  }

  get daoID(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get name(): string {
    return this._call.inputValues[1].value.toString();
  }

  get metadataURI(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class CreateBadgeTypeCall__Outputs {
  _call: CreateBadgeTypeCall;

  constructor(call: CreateBadgeTypeCall) {
    this._call = call;
  }
}

export class CreateDAOCall extends ethereum.Call {
  get inputs(): CreateDAOCall__Inputs {
    return new CreateDAOCall__Inputs(this);
  }

  get outputs(): CreateDAOCall__Outputs {
    return new CreateDAOCall__Outputs(this);
  }
}

export class CreateDAOCall__Inputs {
  _call: CreateDAOCall;

  constructor(call: CreateDAOCall) {
    this._call = call;
  }

  get name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get metadataURI(): string {
    return this._call.inputValues[1].value.toString();
  }

  get badgeContractAddress(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get owner(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class CreateDAOCall__Outputs {
  _call: CreateDAOCall;

  constructor(call: CreateDAOCall) {
    this._call = call;
  }
}

export class CreateQuestTypeCall extends ethereum.Call {
  get inputs(): CreateQuestTypeCall__Inputs {
    return new CreateQuestTypeCall__Inputs(this);
  }

  get outputs(): CreateQuestTypeCall__Outputs {
    return new CreateQuestTypeCall__Outputs(this);
  }
}

export class CreateQuestTypeCall__Inputs {
  _call: CreateQuestTypeCall;

  constructor(call: CreateQuestTypeCall) {
    this._call = call;
  }

  get daoID(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get name(): string {
    return this._call.inputValues[1].value.toString();
  }

  get metadataURI(): string {
    return this._call.inputValues[2].value.toString();
  }

  get contributorBadgeTypeID(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get verifierBadgeTypeID(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get starterDeps(): Array<BigInt> {
    return this._call.inputValues[5].value.toBigIntArray();
  }

  get contributorDeps(): Array<BigInt> {
    return this._call.inputValues[6].value.toBigIntArray();
  }

  get verifierDeps(): Array<BigInt> {
    return this._call.inputValues[7].value.toBigIntArray();
  }
}

export class CreateQuestTypeCall__Outputs {
  _call: CreateQuestTypeCall;

  constructor(call: CreateQuestTypeCall) {
    this._call = call;
  }
}

export class DepositCall extends ethereum.Call {
  get inputs(): DepositCall__Inputs {
    return new DepositCall__Inputs(this);
  }

  get outputs(): DepositCall__Outputs {
    return new DepositCall__Outputs(this);
  }
}

export class DepositCall__Inputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }
}

export class DepositCall__Outputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }
}

export class GrantBadgeCall extends ethereum.Call {
  get inputs(): GrantBadgeCall__Inputs {
    return new GrantBadgeCall__Inputs(this);
  }

  get outputs(): GrantBadgeCall__Outputs {
    return new GrantBadgeCall__Outputs(this);
  }
}

export class GrantBadgeCall__Inputs {
  _call: GrantBadgeCall;

  constructor(call: GrantBadgeCall) {
    this._call = call;
  }

  get daoID(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get badgeTypeID(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get to(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class GrantBadgeCall__Outputs {
  _call: GrantBadgeCall;

  constructor(call: GrantBadgeCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class StartQuestCall extends ethereum.Call {
  get inputs(): StartQuestCall__Inputs {
    return new StartQuestCall__Inputs(this);
  }

  get outputs(): StartQuestCall__Outputs {
    return new StartQuestCall__Outputs(this);
  }
}

export class StartQuestCall__Inputs {
  _call: StartQuestCall;

  constructor(call: StartQuestCall) {
    this._call = call;
  }

  get daoID(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get questTypeID(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get name(): string {
    return this._call.inputValues[2].value.toString();
  }

  get metadataURI(): string {
    return this._call.inputValues[3].value.toString();
  }

  get numContributions(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get requiredStake(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }
}

export class StartQuestCall__Outputs {
  _call: StartQuestCall;

  constructor(call: StartQuestCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}

export class WithdrawFromDAOCall extends ethereum.Call {
  get inputs(): WithdrawFromDAOCall__Inputs {
    return new WithdrawFromDAOCall__Inputs(this);
  }

  get outputs(): WithdrawFromDAOCall__Outputs {
    return new WithdrawFromDAOCall__Outputs(this);
  }
}

export class WithdrawFromDAOCall__Inputs {
  _call: WithdrawFromDAOCall;

  constructor(call: WithdrawFromDAOCall) {
    this._call = call;
  }

  get daoID(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class WithdrawFromDAOCall__Outputs {
  _call: WithdrawFromDAOCall;

  constructor(call: WithdrawFromDAOCall) {
    this._call = call;
  }
}
